(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,c){var a=e.name,s=e.link,l=e.owner,u=e._id,f=e.likes;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._title=a,this._src=s,this._likes=f,this._id=u,this._userId=n,this._isOwner=l._id===n,this._openPopupImage=o,this._templateCardDefaultSelector=r,this._handleTrashClick=i,this._handleLikeClick=c,this._settings={cardSelector:".elements__element",likeSelector:".elements__icon",likeNumberSelector:".elements__like-counter",likeActiveClass:"elements__icon_type_active",titleSelector:".elements__title",imgSelector:".elements__image",delBtnSelector:".elements__trash"},this._card=document.querySelector(this._templateCardDefaultSelector).content.querySelector(this._settings.cardSelector).cloneNode(!0),this._titleEl=this._card.querySelector(this._settings.titleSelector),this._imgEl=this._card.querySelector(this._settings.imgSelector),this._likeBtnEl=this._card.querySelector(this._settings.likeSelector),this._likeNumberEl=this._card.querySelector(this._settings.likeNumberSelector),this._delBtnEl=this._card.querySelector(this._settings.delBtnSelector)}var n,r;return n=t,(r=[{key:"createCard",value:function(){return this._generateCard(),this._setEventsListeners(),this._card}},{key:"_generateCard",value:function(){this._titleEl.textContent=this._title,this._imgEl.src=this._src,this._imgEl.alt=this._title,this._likeNumberEl.innerText=this._likes.length,this._isOwner||this._delBtnEl.remove(),this._renderLike(this.likes)}},{key:"_setEventsListeners",value:function(){var e=this;this._likeBtnEl.addEventListener("click",(function(){e._handleLikeClick(e._id,e._isLiked())})),this._delBtnEl.addEventListener("click",(function(){e._handleTrashClick(e)})),this._imgEl.addEventListener("click",(function(){e._openPopupImage(e._title,e._imgSrc)}))}},{key:"_isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"_renderLike",value:function(){this._isLiked()?this._likeBtnEl.classList.add(this._settings.likeActiveClass):this._likeBtnEl.classList.remove(this._settings.likeActiveClass),this._likeNumberEl.innerText=this._likes.length}},{key:"setLike",value:function(e){this._likes=e,this._renderLike()}},{key:"deleteCard",value:function(e){e.remove()}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationConfig=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector)),this._submitButtonSelector=this._formElement.querySelector(this._validationConfig.submitButtonSelector)}var t,r;return t=e,(r=[{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e.toggleButtonState()}))}))}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._validationConfig.errorClass),t.classList.remove(this._validationConfig.inputErrorClass),t.textContent=""}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error")),n=e.validationMessage;e.classList.add(this._validationConfig.errorClass),t.textContent=n,t.classList.add(this._validationConfig.inputErrorClass)}},{key:"toggleButtonState",value:function(){this._inputList.some((function(e){return!e.validity.valid}))?(this._submitButtonSelector.classList.add(this._validationConfig.inactiveButtonClass),this._submitButtonSelector.disabled=!0):(this._submitButtonSelector.classList.remove(this._validationConfig.inactiveButtonClass),this._submitButtonSelector.disabled=!1)}},{key:"clearValidationErrors",value:function(){this._inputList.forEach(this._hideInputError,this),this.toggleButtonState()}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup__cross")||t.target.classList.contains("popup"))&&e.close()}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},s.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function f(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function c(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this,e))._formElement=r._popup.querySelector(".form"),r._inputList=r._popup.querySelectorAll(".form__text"),r._callbackSubmitForm=t,r._callbackOpenForm=n,r._submitButtonElement=r._formElement.querySelector(".form__submit-btn"),r}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(e){var t=this;this._formElement.addEventListener("submit",(function(n){n.preventDefault(),t._submitButtonElement.disabled=!0,t._submitButtonElement.textContent=e,t._callbackSubmitForm(t._getInputValues())})),s(p(c.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._formElement.reset(),s(p(c.prototype),"close",this).call(this)}},{key:"open",value:function(){this._callbackOpenForm(),s(p(c.prototype),"open",this).call(this)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(i);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=m(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},y.apply(this,arguments)}function m(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function v(e,t){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},v(e,t)}function b(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._popupElement=t._popup.querySelector(".popup__image"),t}return t=c,(n=[{key:"open",value:function(e,t){this._popup.querySelector(".popup__image").src=t,this._popup.querySelector(".popup__image").alt=e,this._popup.querySelector(".popup__image-text").textContent=e,y(k(c.prototype),"open",this).call(this)}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(i);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._section=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._addItem(t._renderer(e))}))}},{key:"renderItem",value:function(e){this._addItem(this._renderer(e))}},{key:"_addItem",value:function(e){this._section.prepend(e)}},{key:"clearSection",value:function(){this._section.innerHTML=""}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){var n=t.profileNameSelector,r=t.profileAboutSelector,o=t.profileAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileNameElement=document.querySelector(n),this._profileAboutElemenet=document.querySelector(r),this._profileAvatarElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id,i=e.cohort;this._name=t,this._about=n,this._avatar=r,this._id=o,this._cohort=i,this._profileNameElement.textContent=this._name,this._profileAboutElemenet.textContent=this._about,this._profileAvatarElement.src=this._avatar}},{key:"getUserInfo",value:function(){return{userName:this._name,userAbout:this._about}}},{key:"getUserId",value:function(){return this._id}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.token,r=t.cohort,o=t.serverUrl;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._token=n,this._cohort=r,this._serverUrl=o}var t,n;return t=e,(n=[{key:"_getCardsUrl",value:function(){return"".concat(this._serverUrl).concat(this._cohort,"/cards")}},{key:"_getUserInfoUrl",value:function(){return"".concat(this._serverUrl).concat(this._cohort,"/users/me")}},{key:"_getAvatarUrl",value:function(){return"".concat(this._serverUrl).concat(this._cohort,"/users/me/avatar")}},{key:"_handlerPromise",value:function(e){if(e.ok)return e.json();throw e.status}},{key:"getUserInfo",value:function(){return fetch(this._getUserInfoUrl(),{headers:{authorization:this._token}}).then(this._handlerPromise)}},{key:"patchUserInfo",value:function(e,t){return fetch(this._getUserInfoUrl(),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then(this._handlerPromise)}},{key:"patchAvatar",value:function(e){return fetch(this._getAvatarUrl(),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then(this._handlerPromise)}},{key:"getInitialCards",value:function(){return fetch(this._getCardsUrl(),{headers:{authorization:this._token}}).then(this._handlerPromise)}},{key:"postCard",value:function(e,t){return fetch(this._getCardsUrl(),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then(this._handlerPromise)}},{key:"delCard",value:function(e){return fetch("".concat(this._getCardsUrl(),"/").concat(e),{method:"DELETE",headers:{authorization:this._token}}).then(this._handlerPromise)}},{key:"putLike",value:function(e){return fetch("".concat(this._getCardsUrl(),"//").concat(e,"/likes"),{method:"PUT",headers:{authorization:this._token}}).then(this._handlerPromise)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._getCardsUrl(),"//").concat(e,"/likes"),{method:"DELETE",headers:{authorization:this._token}}).then(this._handlerPromise)}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=I(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},B.apply(this,arguments)}function I(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}function U(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return U(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._formElement=t._popup.querySelector(".form"),t._submitButtonElement=t._popup.querySelector(".form__submit-btn"),t}return t=c,(n=[{key:"setEventListeners",value:function(e){var t=this;this._formElement.addEventListener("submit",(function(n){n.preventDefault(),t._submitButtonElement.disabled=!0,t._submitButtonElement.textContent=e,t._callbackAccepting()})),B(T(c.prototype),"setEventListeners",this).call(this)}},{key:"setAcceptingCallback",value:function(e){this._callbackAccepting=e}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(i),x={formSelector:".form",inputSelector:".form__text",submitButtonSelector:".form__submit-btn",inactiveButtonClass:"form__submit-btn_type_disabled",inputErrorClass:"form__input-error",errorClass:"form__text_type_error"},A=document.querySelector(".profile__edit-button"),N=document.querySelector(".profile__add-button"),D=document.querySelector(".form__text_type_name"),V=document.querySelector(".form__text_type_profession"),z=document.querySelector(".profile__img-container"),F=document.querySelector(".form-profile"),H=document.querySelector(".form-place"),J=document.querySelector(".form-avatar"),M=new r(x,F);M.enableValidation();var G=new r(x,H);G.enableValidation();var K=new r(x,J);K.enableValidation();var Q=new P({token:"af40a905-9d8d-4025-b8f0-66b0b56f3d46",cohort:"/cohort-52",serverUrl:"https://mesto.nomoreparties.co/v1"}),W=new O({profileNameSelector:".profile__name",profileAboutSelector:".profile__subtitle",profileAvatarSelector:".profile__avatar"});Q.getUserInfo().then((function(e){W.setUserInfo(e)})).then((function(){Q.getInitialCards().then((function(e){ee.renderItems(e.reverse())})).catch((function(e){console.error("Карточки не получены. Код ошибки: ".concat(e))}))})).catch((function(e){console.error("Данные не получены. Код ошибки: ".concat(e,", "))}));var X=new h(".popup_type_new-avatar",(function(e){Q.patchAvatar(e["input-avatar"]).then((function(e){W.setUserInfo(e),X.close()})).catch((function(e){console.error("Аватар не обновлен. Код ошибки: ".concat(e,", "))})).finally((function(){X._submitButtonElement.textContent="Сохранить",X._submitButtonElement.disabled=!1}))}),(function(){K.clearValidationErrors()}));X.setEventListeners("Сохранение..."),z.addEventListener("click",(function(){X.open()}));var Y=new h(".popup_type_profile",(function(e){Q.patchUserInfo(e.name,e.profession).then((function(e){W.setUserInfo(e),Y.close()})).catch((function(e){console.error("Ошибка обновления данных пользователя, код: ".concat(e,", "))})).finally((function(){Y._submitButtonElement.textContent="Сохранить",Y._submitButtonElement.disabled=!1}))}),(function(){var e=W.getUserInfo();D.value=e.userName,V.value=e.userAbout,M.clearValidationErrors()}));Y.setEventListeners("Сохранение..."),A.addEventListener("click",(function(){Y.open()}));var Z=new g(".popup_type_image");Z.setEventListeners();var $=new h(".popup_type_place",(function(e){Q.postCard(e.place,e.link).then((function(e){ee.renderItem(e),$.close()})).catch((function(e){Promise.reject("Ошибка добавления карточки. ".concat(e))})).finally((function(){$._submitButtonElement.textContent="Создать",$._submitButtonElement.disabled=!1}))}),(function(){G.clearValidationErrors()}));$.setEventListeners("Создание..."),N.addEventListener("click",(function(){$.open()}));var ee=new S((function(e){var n=new t(e,W.getUserId(),".card-template_type_default",(function(){Z.open(e.name,e.link)}),(function(e){te.open(),te.setAcceptingCallback((function(){Q.delCard(e._id).then((function(){e.deleteCard(e._card),te.close()})).catch((function(e){Promise.reject("".concat(e," Ошибка удаления карточки."))})).finally((function(){te._submitButtonElement.textContent="Да",te._submitButtonElement.disabled=!1}))}))}),(function(e,t){t?Q.deleteLike(e).then((function(e){n.setLike(e.likes)})).catch((function(e){Promise.reject("".concat(e," Ошибка удаления лайка."))})):Q.putLike(e).then((function(e){n.setLike(e.likes)})).catch((function(e){Promise.reject("".concat(e," Ошибка постановки лайка."))}))}));return n.createCard()}),".elements"),te=new R(".popup_type_delete-card");te.setEventListeners("Удаление...")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,